version: "3"

services:
  #  nginx:
  #    image: nginx:1.15-alpine
  #    networks:
  #      - services-network
  #    ports:
  #      - "80:80"
  #      - "443:443"
  #    volumes:
  #      - ./nginx:/etc/nginx/conf.d
  #      - ./certbot/conf:/etc/letsencrypt:rw
  #      - ./certbot/www:/var/www/certbot:rw
  #
  #  certbot:
  #    image: certbot/certbot
  #    networks:
  #      - services-network
  #    volumes:
  #      - ./certbot/conf:/etc/letsencrypt:rw
  #      - ./certbot/www:/var/www/certbot:rw

  web:
    container_name: crypto_x_web
    build:
      context: ./
      dockerfile: ./client/Dockerfile
    ports:
      - "3000:3000"
    #      - "80" # for dev we don't need to expose port
    environment:
      PORT: 3000
      NODE_ENV: development
    depends_on:
      - api
    links:
      - api:api
    volumes:
      - ./client:/home/app/crypto_x_web
      - ./client/node_modules:/home/app/crypto_x_server/node_modules
    tty: true
    restart: "always"
    entrypoint: /bin/bash
    command: -c "npm run start-dev"
#    command: -s

  api:
    container_name: crypto_x_api
    build:
      context: ./
      dockerfile: ./server/Dockerfile
    ports:
      - "4040:4040"
    networks:
      - services-network
    depends_on:
      - database
      - redis
    environment:
      PORT: 4040
      NODE_ENV: development
    volumes:
      - ./server:/home/app/crypto_x_server
      - ./server/.env:/home/app/crypto_x_server/.env
      - ./server/node_modules:/home/app/crypto_x_server/node_modules
    tty: true
    restart: "always"
    entrypoint: /bin/bash
    command: -c "npm run start:dev"
  #    command: -s

  database:
    image: postgres:13-bullseye
    container_name: crypto_x_database
    restart: "always"
    ports:
      - "5433:5432"
    networks:
      - services-network
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready" ]
      interval: 1s
      timeout: 5s
      retries: 30
    environment:
      - POSTGRES_DB=crypto_x
      - POSTGRES_USER=root
      - POSTGRES_PASSWORD=root

  redis:
    image: redis:5.0.3-alpine
    container_name: crypto_x_redis
    ports:
      - "6399:6379"
    networks:
      - services-network
    healthcheck:
      test: [ "CMD", "redis-cli", "ping" ]
      interval: 1s
      timeout: 3s
      retries: 30
    tty: true
    restart: "always"

networks:
  services-network:
    driver: bridge

volumes:
  app:
